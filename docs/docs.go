// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/app": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "app"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "cols",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "only_count",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "realm_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_name",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "with_total_count",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dopTypes.PaginatedListRep"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entities.AppSt"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dopTypes.ErrRep"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "app"
                ],
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/entities.AppCUSt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dopTypes.CreateRep"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dopTypes.ErrRep"
                        }
                    }
                }
            }
        },
        "/app/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "app"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.AppSt"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dopTypes.ErrRep"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "app"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/entities.AppCUSt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dopTypes.ErrRep"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "app"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dopTypes.ErrRep"
                        }
                    }
                }
            }
        },
        "/config": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "config"
                ],
                "summary": "Get configs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ConfigSt"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dopTypes.ErrRep"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "config"
                ],
                "summary": "Update configs",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/entities.ConfigSt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dopTypes.ErrRep"
                        }
                    }
                }
            }
        },
        "/endpoint": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "endpoint"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "app_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "cols",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "only_count",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_name",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "with_total_count",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dopTypes.PaginatedListRep"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entities.EndpointSt"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dopTypes.ErrRep"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "endpoint"
                ],
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/entities.EndpointCUSt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dopTypes.CreateRep"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dopTypes.ErrRep"
                        }
                    }
                }
            }
        },
        "/endpoint/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "endpoint"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "with_app",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.EndpointSt"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dopTypes.ErrRep"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "endpoint"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/entities.EndpointCUSt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dopTypes.ErrRep"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "endpoint"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dopTypes.ErrRep"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ProfileSt"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dopTypes.ErrRep"
                        }
                    }
                }
            }
        },
        "/profile/auth": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/entities.ProfileAuthReqSt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ProfileAuthRepSt"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dopTypes.ErrRep"
                        }
                    }
                }
            }
        },
        "/profile/auth/token": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/entities.ProfileAuthByRefreshTokenReqSt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ProfileAuthByRefreshTokenRepSt"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dopTypes.ErrRep"
                        }
                    }
                }
            }
        },
        "/proxy_request": {
            "post": {
                "tags": [
                    "proxy_request"
                ],
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/entities.ProxyRequestSendReqSt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dopTypes.ErrRep"
                        }
                    }
                }
            }
        },
        "/realm": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "realm"
                ],
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "cols",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "only_count",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_name",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "with_total_count",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dopTypes.PaginatedListRep"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entities.RealmSt"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dopTypes.ErrRep"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "realm"
                ],
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/entities.RealmCUSt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dopTypes.CreateRep"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dopTypes.ErrRep"
                        }
                    }
                }
            }
        },
        "/realm/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "realm"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.RealmSt"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dopTypes.ErrRep"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "realm"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/entities.RealmCUSt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dopTypes.ErrRep"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "realm"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dopTypes.ErrRep"
                        }
                    }
                }
            }
        },
        "/role": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "name": "app_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "cols",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "only_count",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_name",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "with_total_count",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dopTypes.PaginatedListRep"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entities.RoleSt"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dopTypes.ErrRep"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "role"
                ],
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/entities.RoleCUSt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dopTypes.CreateRep"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dopTypes.ErrRep"
                        }
                    }
                }
            }
        },
        "/role/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.RoleSt"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dopTypes.ErrRep"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/entities.RoleCUSt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dopTypes.ErrRep"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "role"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dopTypes.ErrRep"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dopTypes.CreateRep": {
            "type": "object",
            "properties": {
                "id": {}
            }
        },
        "dopTypes.ErrRep": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "error_code": {
                    "type": "string"
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "dopTypes.PaginatedListRep": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "results": {},
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "entities.AppCUSt": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "data": {
                    "type": "string"
                },
                "realm_id": {
                    "type": "string"
                }
            }
        },
        "entities.AppSt": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "data": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "realm_id": {
                    "type": "string"
                }
            }
        },
        "entities.ConfigSt": {
            "type": "object"
        },
        "entities.EndpointCUSt": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "app_id": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                }
            }
        },
        "entities.EndpointSt": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "app": {
                    "$ref": "#/definitions/entities.AppSt"
                },
                "app_id": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "entities.ProfileAuthByRefreshTokenRepSt": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                }
            }
        },
        "entities.ProfileAuthByRefreshTokenReqSt": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "entities.ProfileAuthRepSt": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "entities.ProfileAuthReqSt": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "entities.ProfileSt": {
            "type": "object"
        },
        "entities.ProxyRequestSendReqSt": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string"
                }
            }
        },
        "entities.RealmCUSt": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                }
            }
        },
        "entities.RealmSt": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "entities.RoleCUSt": {
            "type": "object",
            "properties": {
                "app_id": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                }
            }
        },
        "entities.RoleSt": {
            "type": "object",
            "properties": {
                "app_id": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
